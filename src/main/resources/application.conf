dataObjects {
  ext_departures {
    type = WebserviceFileDataObject
    url = "https://opensky-network.org/api/flights/departure?airport=LSZB&begin=1630200800&end=1630310979"
  }
  stg_departures {
    type = JsonFileDataObject
    path = ext_departures
  }

  ext_airports {
    type = WebserviceFileDataObject
    url = "https://ourairports.com/data/airports.csv"
  }

  stg_airports {
    type = CsvFileDataObject
    path = ext_airports
  }

  btl_departures_airports {
    type = CsvFileDataObject
    path = btl_departures_airports
  }

  btl_connected_airports {
    type = CsvFileDataObject
    path = connected-airports
  }

  btl_distances {
    type = CsvFileDataObject
    path = btl_distances
  }

}

actions {
  download_ext_departures {
    type = FileTransferAction
    inputId = ext_departures
    outputId = stg_departures
    metadata {
      feed = download
    }
  }

  download_airports {
    type = FileTransferAction
    inputId = ext_airports
    outputId = stg_airports
    metadata {
      feed = download
    }
  }

  join_departures_airports {
    type = CustomSparkAction
    inputIds = [stg_departures, stg_airports]
    outputIds = [btl_connected_airports]
    transformers = [{
      type = SQLDfsTransformer
      code = {
        btl_departures_airports = """select deps.name as dep_name,
        stg_departures.estdepartureairport, stg_departures.estarrivalairport,
        deps.latitude_deg as dep_latitude_deg, deps.longitude_deg as dep_longitude_deg
        from stg_departures join stg_airports deps on stg_departures.estDepartureAirport = deps.ident"""
      }
    }, {
      type = SQLDfsTransformer
      code = {
        btl_connected_airports = """select btl_departures_airports.dep_name, arrs.name as arr_name,
      btl_departures_airports.estdepartureairport, btl_departures_airports.estarrivalairport,
      btl_departures_airports.dep_latitude_deg, btl_departures_airports.dep_longitude_deg,
      arrs.latitude_deg as arr_latitude_deg, arrs.longitude_deg as arr_longitude_deg
      from btl_departures_airports join stg_airports arrs on btl_departures_airports.estArrivalAirport = arrs.ident"""
      }
    }
    ]
    metadata {
      feed = compute
    }
  }

  compute_distances {
    type = CopyAction
    inputId = btl_connected_airports
    outputId = btl_distances
    transformer.class-name = com.sample.ComputeDistanceTransformer

    metadata {
      feed = compute
    }
  }
}
